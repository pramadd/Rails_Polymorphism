Polymorphism
In Ruby on Rails, Polymorphism is the ability for a single model to belong to more than one other model. Let's create a new rails application that will implement the example on the Ruby on Rails guide.

rails new polyCopy
In this application, we will create 3 models.

Picture - Our polymorphic model.
Employee - A employee can have many pictures.
Product - A product can have many pictures.
rails g model Picture imageable:references{polymorphic}
rails g model Employee first_name:string last_name:string
rails g model Product name:string
rake db:migrateCopy
Now, in each model file, we must add these relationships.

app/models/picture.rb

class Picture < ActiveRecord::Base
  belongs_to :imageable, polymorphic: true
endCopy
app/models/employee.rb

class Employee < ActiveRecord::Base
  has_many :pictures, as: :imageable
endCopy
app/models/product.rb

class Product < ActiveRecord::Base
  has_many :pictures, as: :imageable
endCopy
If we look at our pictures table, we will have a imageable_id and imageable_type columns. These two columns along with the imageable reference is what allows our Picture model to be polymorphic. Let's get into the rails console and see it in action.

# new instance of the Picture model. Take note of the imageable_id and imageable_type columns
Picture.new
=> #<Picture id: nil, imageable_id: nil, imageable_type: nil, created_at: nil, updated_at: nil> 
# let's create a couple of employees and products so that we can add pictures to them
Employee.create(first_name: "John", last_name: "Doe")
Employee.create(first_name: "Jane", last_name: "Doe")
Product.create(name: "Pillow")
Product.create(name: "Sofa")
# let's create a some pictures for the employees and products we just created. There are a couple of ways to do this.
# first example:
Picture.create(imageable_id: 1, imageable_type: "Employee")
Picture.create(imageable_id: 1, imageable_type: "Product")
# second example:
Picture.create(imageable: Employee.second)
Picture.create(imageable: Product.second)
# now to retrieve the pictures of any employee or products we can do the following:
pics1 = Employee.first.pictures
pics2 = Employee.second.pictures
pics3 = Product.first.pictures
pics4 = Product.second.pictures